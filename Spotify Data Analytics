# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1. What are the top 10 tracks with the highest popularity in the Spotifydata table?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

#2. Which artists have the highest average popularity for their tracks? List the top 10 artists by average popularity.
SELECT artist_name, track_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc;

#3. - How many distinct artists are there in the Spotifydata table?
SELECT COUNT(distinct artist_name)
FROM BIT_DB.Spotifydata;

#4. How many records are there in the Spotifydata table?
SELECT COUNT(id)
FROM BIT_DB.Spotifydata

#5. Which artists have multiple tracks in the dataset and what is the average popularity for each of those artists? List the artists with more than one track, ordered by the number of appearances.
SELECT artist_name, count(artist_name) as number_appearance, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING count(artist_name) > 1 
ORDER BY number_appearance DESC;

#6. Which artists have multiple tracks in the dataset, and what is the average popularity, danceability, and tempo for each of those artists? List the artists with more than one track, ordered by tempo.
SELECT artist_name, count(artist_name) as number_appearance, AVG(popularity), danceability, tempo
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING count(artist_name) > 1 
ORDER BY tempo DESC;

#7. Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
SELECT s.artist_name, AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
